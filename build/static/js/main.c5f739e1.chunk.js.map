{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","selectedFile","onFileChange","event","setState","target","files","onFileUpload","formData","FormData","append","name","console","log","axios","post","fileData","type","onChange","this","onClick","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAIMA,E,4MAGFC,MAAQ,CACNC,aAAc,M,EAIhBC,aAAe,SAAAC,GAGb,EAAKC,SAAS,CAAEH,aAAcE,EAAME,OAAOC,MAAM,M,EAKnDC,aAAe,WAGb,IAAMC,EAAW,IAAIC,SAGrBD,EAASE,OACP,SACA,EAAKV,MAAMC,aACX,EAAKD,MAAMC,aAAaU,MAK1BC,QAAQC,IAAI,EAAKb,MAAMC,cAIvBa,IAAMC,KAAK,iBAAkBP,I,EAK/BQ,SAAW,WAGT,OAAI,EAAKhB,MAAMC,aAGX,gCACE,+CAEZ,4CAAe,EAAKD,MAAMC,aAAaU,QAGvC,4CAAe,EAAKX,MAAMC,aAAagB,WAS7B,gCACE,uBACA,8E,4CAUR,WAEE,OACE,gCACI,yCAGA,6DAGA,gCACI,uBAAOA,KAAK,OAAOC,SAAUC,KAAKjB,eAClC,wBAAQkB,QAASD,KAAKZ,aAAtB,wBAIHY,KAAKH,kB,GAxFAK,aAiGDtB,ICzFFuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c5f739e1.chunk.js","sourcesContent":["import axios from 'axios';\n \nimport React,{Component} from 'react';\n\nclass App extends Component {\n  \n\n    state = {\n      selectedFile: null\n    };\n    \n    \n    onFileChange = event => {\n    \n      // Update the state\n      this.setState({ selectedFile: event.target.files[0] });\n    \n    };\n    \n   \n    onFileUpload = () => {\n    \n      // Create an object of formData\n      const formData = new FormData();\n    \n      // Update the formData object\n      formData.append(\n        \"myFile\",\n        this.state.selectedFile,\n        this.state.selectedFile.name\n      );\n\n\n      // Details of the uploaded file\n      console.log(this.state.selectedFile);\n    \n      // Request made to the backend api\n      // Send formData object\n      axios.post(\"api/uploadfile\", formData);\n    };\n    \n    // File content to be displayed after\n    // file upload is complete\n    fileData = () => {\n   \n    \n      if (this.state.selectedFile) {\n         \n        return (\n          <div>\n            <h2>File Details:</h2>\n             \n<p>File Name: {this.state.selectedFile.name}</p>\n \n             \n<p>File Type: {this.state.selectedFile.type}</p>\n \n\n \n          </div>\n          \n        );\n      } else {\n        return (\n          <div>\n            <br />\n            <h4>Choose before Pressing the Upload button</h4>\n          </div>\n        );\n      }\n    };\n    \n      \n    \n  \n    \n    render() {\n    \n      return (\n        <div>\n            <h1>\n              Saarthi\n            </h1>\n            <h3>\n              Upload your music files! :)\n            </h3>\n            <div>\n                <input type=\"file\" onChange={this.onFileChange} />\n                <button onClick={this.onFileUpload}>\n                  Upload!\n                </button>\n            </div>\n            {this.fileData()}\n          \n  \n        </div>\n        \n      );\n    }\n  }\n \n  export default App;\n  //","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}